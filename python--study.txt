1.Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，
  最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。
2.Python使用缩进来组织代码块，请务必遵守约定俗成的习惯，坚持使用4个空格的缩进
3.python中的数据类型：
    整数：任意的整数，包括负数。十六进制的前缀为 0x，大小没有限制
    浮点数：不是精确的，会有四舍五入，大小没有限制，超出一定范围，inf（无限大）
    字符串：用的最多的数据类型，没有之一。
      \ -- 转义符 ，\n -- 换行，\t -- 制表符，\\ -- \
      r'' -- 表示，默认''内部的字符不转意，原样输出。
      print(r'\\t\\') ----> \\t\\
    boolean：布尔值 -- True False  (and,or,not 运算)
    空值：None 来表示，相当于 null，但不是null
    变量赋值问题，类型是不固定的，可以多次赋值，值的类型可以不同。
    python中的变量指向问题，和java中基本相同
    在Python中，通常用全部大写的变量名表示常量。
4.这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，
  如果赋值的时候类型不匹配，就会报错。例如Java是静态语言
5. encode(),decode(),len()
  len('str') --- 字符个数
  len(b'中国') --- 字节的个数
  格式化输出字符串：
    print('Hello,%S' % ('world'))
    % --- 用来格式化字符串的
    %s -- 字符串，%d -- 整数，%f -- 浮点数，%x -- 十六进制整数
6.内置有序列表：list ，索引 可以是：-1，-2.... -1直接就是最后一个元素
7.tuple[t^pl] 元组，数组。tuple所谓的“不变”是说，tuple的每个元素，指向永远不变

python3中6种标准的数据类型：
  可变类型：List  dictionary  set
  不可变类型：Tuple  String  Number
  python中的字符串不能改变，python中没有单独的字符类型,一个字符就是长度为1的字符串
  print()输出默认是换行的，如果想不换行，可以 print(end="")



python中  没有  switch ... case语句
          没有  do ... while语句

          有  if ... elif ... else
          有  while ... else语句


python:函数的参数传递问题  python中一切皆对象
  不可变类型  number ,string ,tuple  --- > 值传递 （一个副本，一个copy）
  可变类型 字典，列表  -- > 引用传递 (传递的是对象的本身)


python -- CGI  通用网关接口  (common gateway interface)

查看python版本信息：python -V或者是python --version

python是解释型语言，运行速度慢(你的代码在执行时会一行一行地翻译成CPU能理解的机器码,这是非常耗时的)
代码不能加密，发布的都是源代码。特点就是简洁，优雅，明确

python是跨平台的，各种解释器，python是动态语言(java是静态的) 
运行时结构是否可变，决定了语言的动静之分，简单描述一下，java是静态语言，定义了一个类，其结构是不能变的。而python是动态语言，定义了一个类，其结构是可变的，可以给实例添加属性。
变量本身类型不固定的语言称之为动态语言(可以理解为弱类型？)
python中的实例属性和类属性 和 java的略有不同

函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”
判断某一个变量是不是某一种类型，可以使用isinstance()来判断
isinstance(a,list) ===> True
list() 方法用于将元组转换为列表

python的继承可以多继承 class A(Base1,Base2...)

python定义类的时候
__slots__函数：用于限制当前类的实例的属性
python中双下划线__开头定义的变量，是私有变量，只能在类的内部访问，以双下划线开头，同时以双下滑线结尾的是特殊变量，是可以直接访问的
注：私有的变量也是可以直接访问的 Example -- var._Class__attributeName
python中，以双下划线开头和结尾的函数，是特殊的函数
类似_xxx和__xxx这样的函数或变量就是非公开的（private），不应该被直接引用，比如_abc，__abc等

python中可以直接调用实例 
---对象和函数是模糊的，傻傻分不清，通过callable()函数，我们就可以判断一个对象是否是“可调用”对象

Python解释器由于设计时有GIL全局锁，导致了多线程无法利用多核。多线程的并发在Python中就是一个美丽的梦
GIL -- Global interpreter lock 

单线程的异步编程模型称为协程，有了协程的支持，就可以基于事件驱动编写高效的多任务程序

那么什么是上下文管理器?上下文管理器就是实现了上下文协议的类，而上下文协议就是一个类要实现__enter__()和__exit__()两个方法，仅此而已

psutil == process and system utilities  --- python获取系统信息的第三方模块
它不仅可以通过一两行代码实现系统监控，还可以跨平台使用，支持Linux／UNIX／OSX／Windows等，是系统管理员和运维小伙伴不可或缺的必备模块

coroutine -- 协程，微线程

python中字符串的三种拼接方式:
  1. 用 + 号进行拼接
  2. 用 %s 进行拼接
  3. 用 ''' 或是 """ 的方式拼接

scrapy [screipai] === python 爬虫框架

zip函数和列表生成式 --- 不好理解

map() zip() list() 三函数

beautifulsoup -- 美丽炸药


yield -- 规则

#被调用方法
def fun():
  r = yield n

#主动调用方
def zhudong():
  n = send(param)
param赋值给r，n的值返回给调用者